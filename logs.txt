
==> Audit <==
|--------------|---------------|----------|--------------|---------|---------------------|---------------------|
|   Command    |     Args      | Profile  |     User     | Version |     Start Time      |      End Time       |
|--------------|---------------|----------|--------------|---------|---------------------|---------------------|
| start        |               | minikube | kiran-madala | v1.34.0 | 22 Dec 24 00:21 IST | 22 Dec 24 00:24 IST |
| update-check |               | minikube | kiran-madala | v1.34.0 | 22 Dec 24 00:31 IST | 22 Dec 24 00:31 IST |
| ssh          |               | minikube | kiran-madala | v1.34.0 | 22 Dec 24 00:40 IST |                     |
| ip           |               | minikube | kiran-madala | v1.34.0 | 22 Dec 24 00:46 IST | 22 Dec 24 00:46 IST |
| service      | nginx-service | minikube | kiran-madala | v1.34.0 | 22 Dec 24 00:50 IST |                     |
|--------------|---------------|----------|--------------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2024/12/22 00:21:00
Running on machine: kiran-madala
Binary: Built with gc go1.22.5 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1222 00:21:00.240030    4360 out.go:345] Setting OutFile to fd 1 ...
I1222 00:21:00.240186    4360 out.go:397] isatty.IsTerminal(1) = true
I1222 00:21:00.240192    4360 out.go:358] Setting ErrFile to fd 2...
I1222 00:21:00.240198    4360 out.go:397] isatty.IsTerminal(2) = true
I1222 00:21:00.240424    4360 root.go:338] Updating PATH: /home/kiran-madala/.minikube/bin
W1222 00:21:00.240532    4360 root.go:314] Error reading config file at /home/kiran-madala/.minikube/config/config.json: open /home/kiran-madala/.minikube/config/config.json: no such file or directory
I1222 00:21:00.240979    4360 out.go:352] Setting JSON to false
I1222 00:21:00.242271    4360 start.go:129] hostinfo: {"hostname":"kiran-madala","uptime":205,"bootTime":1734806855,"procs":248,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"6.8.0-51-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"49643298-64c9-4682-bf87-0b1eb800ffb9"}
I1222 00:21:00.242361    4360 start.go:139] virtualization: kvm host
I1222 00:21:00.243945    4360 out.go:177] 😄  minikube v1.34.0 on Ubuntu 24.04
W1222 00:21:00.246608    4360 preload.go:293] Failed to list preload files: open /home/kiran-madala/.minikube/cache/preloaded-tarball: no such file or directory
I1222 00:21:00.246686    4360 notify.go:220] Checking for updates...
I1222 00:21:00.246853    4360 driver.go:394] Setting default libvirt URI to qemu:///system
I1222 00:21:00.246877    4360 global.go:112] Querying for installed drivers using PATH=/home/kiran-madala/.minikube/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/usr/jdk-23.0.1//bin
I1222 00:21:00.246993    4360 global.go:133] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I1222 00:21:00.247112    4360 global.go:133] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I1222 00:21:00.247175    4360 global.go:133] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I1222 00:21:00.388013    4360 docker.go:123] docker version: linux-27.4.1:Docker Engine - Community
I1222 00:21:00.388136    4360 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1222 00:21:00.736434    4360 info.go:266] docker info: {ID:0e4662b3-3493-423c-9fba-354c3e68ff10 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:23 OomKillDisable:false NGoroutines:40 SystemTime:2024-12-22 00:21:00.724485976 +0530 IST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-51-generic OperatingSystem:Ubuntu 24.04.1 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:12400156672 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:kiran-madala Labels:[] ExperimentalBuild:false ServerVersion:27.4.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:88bf19b2105c8b17560993bee28a01ddc2f97182 Expected:88bf19b2105c8b17560993bee28a01ddc2f97182} RuncCommit:{ID:v1.2.2-0-g7cb3632 Expected:v1.2.2-0-g7cb3632} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.3] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.1]] Warnings:<nil>}}
I1222 00:21:00.736571    4360 docker.go:318] overlay module found
I1222 00:21:00.736591    4360 global.go:133] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1222 00:21:00.750810    4360 global.go:133] none default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1222 00:21:00.751138    4360 global.go:133] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I1222 00:21:00.751178    4360 global.go:133] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1222 00:21:00.751410    4360 global.go:133] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I1222 00:21:00.751433    4360 driver.go:316] not recommending "none" due to default: false
I1222 00:21:00.751438    4360 driver.go:316] not recommending "ssh" due to default: false
I1222 00:21:00.751462    4360 driver.go:351] Picked: docker
I1222 00:21:00.751480    4360 driver.go:352] Alternatives: [none ssh]
I1222 00:21:00.751502    4360 driver.go:353] Rejects: [qemu2 virtualbox vmware podman kvm2]
I1222 00:21:00.753036    4360 out.go:177] ✨  Automatically selected the docker driver. Other choices: none, ssh
I1222 00:21:00.754105    4360 start.go:297] selected driver: docker
I1222 00:21:00.754116    4360 start.go:901] validating driver "docker" against <nil>
I1222 00:21:00.754131    4360 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1222 00:21:00.754278    4360 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1222 00:21:00.809439    4360 info.go:266] docker info: {ID:0e4662b3-3493-423c-9fba-354c3e68ff10 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:23 OomKillDisable:false NGoroutines:40 SystemTime:2024-12-22 00:21:00.801007499 +0530 IST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-51-generic OperatingSystem:Ubuntu 24.04.1 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:12400156672 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:kiran-madala Labels:[] ExperimentalBuild:false ServerVersion:27.4.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:88bf19b2105c8b17560993bee28a01ddc2f97182 Expected:88bf19b2105c8b17560993bee28a01ddc2f97182} RuncCommit:{ID:v1.2.2-0-g7cb3632 Expected:v1.2.2-0-g7cb3632} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.3] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.1]] Warnings:<nil>}}
I1222 00:21:00.809591    4360 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I1222 00:21:00.810094    4360 start_flags.go:393] Using suggested 2900MB memory alloc based on sys=11825MB, container=11825MB
I1222 00:21:00.810295    4360 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I1222 00:21:00.811502    4360 out.go:177] 📌  Using Docker driver with root privileges
I1222 00:21:00.814961    4360 cni.go:84] Creating CNI manager for ""
I1222 00:21:00.814986    4360 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1222 00:21:00.814996    4360 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I1222 00:21:00.815078    4360 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:2900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/kiran-madala:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1222 00:21:00.816484    4360 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I1222 00:21:00.817705    4360 cache.go:121] Beginning downloading kic base image for docker with docker
I1222 00:21:00.819048    4360 out.go:177] 🚜  Pulling base image v0.0.45 ...
I1222 00:21:00.822381    4360 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1222 00:21:00.822456    4360 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local docker daemon
I1222 00:21:00.841144    4360 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 to local cache
I1222 00:21:00.841353    4360 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local cache directory
I1222 00:21:00.841471    4360 image.go:148] Writing gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 to local cache
I1222 00:21:01.090870    4360 preload.go:118] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.31.0/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4
I1222 00:21:01.090974    4360 cache.go:56] Caching tarball of preloaded images
I1222 00:21:01.091381    4360 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1222 00:21:01.093075    4360 out.go:177] 💾  Downloading Kubernetes v1.31.0 preload ...
I1222 00:21:01.095335    4360 preload.go:236] getting checksum for preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1222 00:21:01.440958    4360 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.31.0/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4?checksum=md5:2dd98f97b896d7a4f012ee403b477cc8 -> /home/kiran-madala/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4
I1222 00:22:46.348730    4360 preload.go:247] saving checksum for preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1222 00:22:46.348858    4360 preload.go:254] verifying checksum of /home/kiran-madala/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1222 00:22:47.115278    4360 cache.go:59] Finished verifying existence of preloaded tar for v1.31.0 on docker
I1222 00:22:47.115607    4360 profile.go:143] Saving config to /home/kiran-madala/.minikube/profiles/minikube/config.json ...
I1222 00:22:47.115641    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/config.json: {Name:mk7574988c6a9a5635eb278e7bf48c79df17c448 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:10.554241    4360 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 as a tarball
I1222 00:23:10.554260    4360 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from local cache
I1222 00:23:37.759589    4360 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from cached tarball
I1222 00:23:37.759632    4360 cache.go:194] Successfully downloaded all kic artifacts
I1222 00:23:37.759670    4360 start.go:360] acquireMachinesLock for minikube: {Name:mk68ee7fd355db0fb0812a8917a5296bc5d10cee Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1222 00:23:37.759824    4360 start.go:364] duration metric: took 132.719µs to acquireMachinesLock for "minikube"
I1222 00:23:37.759856    4360 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:2900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/kiran-madala:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I1222 00:23:37.759952    4360 start.go:125] createHost starting for "" (driver="docker")
I1222 00:23:37.761557    4360 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=2900MB) ...
I1222 00:23:37.762297    4360 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I1222 00:23:37.762349    4360 client.go:168] LocalClient.Create starting
I1222 00:23:37.762495    4360 main.go:141] libmachine: Creating CA: /home/kiran-madala/.minikube/certs/ca.pem
I1222 00:23:38.102088    4360 main.go:141] libmachine: Creating client certificate: /home/kiran-madala/.minikube/certs/cert.pem
I1222 00:23:38.429796    4360 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W1222 00:23:38.456433    4360 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I1222 00:23:38.456523    4360 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I1222 00:23:38.456544    4360 cli_runner.go:164] Run: docker network inspect minikube
W1222 00:23:38.482729    4360 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I1222 00:23:38.482754    4360 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I1222 00:23:38.482775    4360 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I1222 00:23:38.482913    4360 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1222 00:23:38.516950    4360 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc001609670}
I1222 00:23:38.517001    4360 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I1222 00:23:38.517085    4360 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I1222 00:23:38.680793    4360 network_create.go:108] docker network minikube 192.168.49.0/24 created
I1222 00:23:38.680818    4360 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I1222 00:23:38.680903    4360 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I1222 00:23:38.706994    4360 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I1222 00:23:38.734173    4360 oci.go:103] Successfully created a docker volume minikube
I1222 00:23:38.734281    4360 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -d /var/lib
I1222 00:23:41.686491    4360 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -d /var/lib: (2.95216878s)
I1222 00:23:41.686512    4360 oci.go:107] Successfully prepared a docker volume minikube
I1222 00:23:41.686530    4360 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1222 00:23:41.686551    4360 kic.go:194] Starting extracting preloaded images to volume ...
I1222 00:23:41.686617    4360 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/kiran-madala/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -I lz4 -xf /preloaded.tar -C /extractDir
I1222 00:23:45.652707    4360 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/kiran-madala/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -I lz4 -xf /preloaded.tar -C /extractDir: (3.966048007s)
I1222 00:23:45.652731    4360 kic.go:203] duration metric: took 3.966178938s to extract preloaded images to volume ...
W1222 00:23:45.652844    4360 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W1222 00:23:45.652903    4360 oci.go:243] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I1222 00:23:45.652960    4360 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I1222 00:23:45.715755    4360 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2900mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85
I1222 00:23:46.220064    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I1222 00:23:46.246060    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:23:46.270048    4360 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I1222 00:23:46.337968    4360 oci.go:144] the created container "minikube" has a running status.
I1222 00:23:46.337991    4360 kic.go:225] Creating ssh key for kic: /home/kiran-madala/.minikube/machines/minikube/id_rsa...
I1222 00:23:47.060280    4360 kic_runner.go:191] docker (temp): /home/kiran-madala/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I1222 00:23:47.093779    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:23:47.140068    4360 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I1222 00:23:47.140097    4360 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I1222 00:23:47.216232    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:23:47.242850    4360 machine.go:93] provisionDockerMachine start ...
I1222 00:23:47.243003    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:47.270692    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:47.271053    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:47.271067    4360 main.go:141] libmachine: About to run SSH command:
hostname
I1222 00:23:47.416445    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1222 00:23:47.416468    4360 ubuntu.go:169] provisioning hostname "minikube"
I1222 00:23:47.416541    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:47.443122    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:47.443499    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:47.443516    4360 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I1222 00:23:47.609032    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1222 00:23:47.609116    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:47.635160    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:47.635459    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:47.635489    4360 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I1222 00:23:47.775714    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1222 00:23:47.775760    4360 ubuntu.go:175] set auth options {CertDir:/home/kiran-madala/.minikube CaCertPath:/home/kiran-madala/.minikube/certs/ca.pem CaPrivateKeyPath:/home/kiran-madala/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/kiran-madala/.minikube/machines/server.pem ServerKeyPath:/home/kiran-madala/.minikube/machines/server-key.pem ClientKeyPath:/home/kiran-madala/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/kiran-madala/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/kiran-madala/.minikube}
I1222 00:23:47.775792    4360 ubuntu.go:177] setting up certificates
I1222 00:23:47.775806    4360 provision.go:84] configureAuth start
I1222 00:23:47.775900    4360 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1222 00:23:47.797334    4360 provision.go:143] copyHostCerts
I1222 00:23:47.797421    4360 exec_runner.go:151] cp: /home/kiran-madala/.minikube/certs/ca.pem --> /home/kiran-madala/.minikube/ca.pem (1094 bytes)
I1222 00:23:47.797587    4360 exec_runner.go:151] cp: /home/kiran-madala/.minikube/certs/cert.pem --> /home/kiran-madala/.minikube/cert.pem (1135 bytes)
I1222 00:23:47.797688    4360 exec_runner.go:151] cp: /home/kiran-madala/.minikube/certs/key.pem --> /home/kiran-madala/.minikube/key.pem (1675 bytes)
I1222 00:23:47.797749    4360 provision.go:117] generating server cert: /home/kiran-madala/.minikube/machines/server.pem ca-key=/home/kiran-madala/.minikube/certs/ca.pem private-key=/home/kiran-madala/.minikube/certs/ca-key.pem org=kiran-madala.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I1222 00:23:47.867950    4360 provision.go:177] copyRemoteCerts
I1222 00:23:47.867992    4360 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1222 00:23:47.868025    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:47.888714    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:23:47.991465    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I1222 00:23:48.025508    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1094 bytes)
I1222 00:23:48.060383    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I1222 00:23:48.093025    4360 provision.go:87] duration metric: took 317.206335ms to configureAuth
I1222 00:23:48.093045    4360 ubuntu.go:193] setting minikube options for container-runtime
I1222 00:23:48.093256    4360 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I1222 00:23:48.093304    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:48.112843    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:48.113038    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:48.113047    4360 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1222 00:23:48.252565    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I1222 00:23:48.252582    4360 ubuntu.go:71] root file system type: overlay
I1222 00:23:48.252778    4360 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I1222 00:23:48.252853    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:48.271631    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:48.271821    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:48.271898    4360 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1222 00:23:48.431520    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1222 00:23:48.431611    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:48.452852    4360 main.go:141] libmachine: Using SSH client type: native
I1222 00:23:48.453058    4360 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32768 <nil> <nil>}
I1222 00:23:48.453075    4360 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1222 00:23:50.045949    4360 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-08-27 14:13:43.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-12-21 18:53:48.427473910 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I1222 00:23:50.045986    4360 machine.go:96] duration metric: took 2.803122773s to provisionDockerMachine
I1222 00:23:50.045999    4360 client.go:171] duration metric: took 12.283642788s to LocalClient.Create
I1222 00:23:50.046018    4360 start.go:167] duration metric: took 12.283729212s to libmachine.API.Create "minikube"
I1222 00:23:50.046027    4360 start.go:293] postStartSetup for "minikube" (driver="docker")
I1222 00:23:50.046040    4360 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1222 00:23:50.046110    4360 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1222 00:23:50.046187    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:50.069277    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:23:50.167291    4360 ssh_runner.go:195] Run: cat /etc/os-release
I1222 00:23:50.171684    4360 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I1222 00:23:50.171721    4360 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I1222 00:23:50.171738    4360 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I1222 00:23:50.171744    4360 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I1222 00:23:50.171755    4360 filesync.go:126] Scanning /home/kiran-madala/.minikube/addons for local assets ...
I1222 00:23:50.171835    4360 filesync.go:126] Scanning /home/kiran-madala/.minikube/files for local assets ...
I1222 00:23:50.171868    4360 start.go:296] duration metric: took 125.835387ms for postStartSetup
I1222 00:23:50.172251    4360 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1222 00:23:50.191798    4360 profile.go:143] Saving config to /home/kiran-madala/.minikube/profiles/minikube/config.json ...
I1222 00:23:50.192158    4360 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I1222 00:23:50.192210    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:50.212655    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:23:50.303355    4360 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I1222 00:23:50.308692    4360 start.go:128] duration metric: took 12.548725702s to createHost
I1222 00:23:50.308712    4360 start.go:83] releasing machines lock for "minikube", held for 12.548876045s
I1222 00:23:50.308785    4360 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1222 00:23:50.329550    4360 ssh_runner.go:195] Run: cat /version.json
I1222 00:23:50.329592    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:50.329606    4360 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1222 00:23:50.329661    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:23:50.354845    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:23:50.356551    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:23:50.986530    4360 ssh_runner.go:195] Run: systemctl --version
I1222 00:23:50.993411    4360 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I1222 00:23:51.000110    4360 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I1222 00:23:51.035831    4360 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I1222 00:23:51.035945    4360 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1222 00:23:51.070473    4360 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I1222 00:23:51.070493    4360 start.go:495] detecting cgroup driver to use...
I1222 00:23:51.070530    4360 detect.go:190] detected "systemd" cgroup driver on host os
I1222 00:23:51.070705    4360 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1222 00:23:51.092466    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I1222 00:23:51.105110    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1222 00:23:51.118614    4360 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I1222 00:23:51.118699    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I1222 00:23:51.130864    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1222 00:23:51.143141    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1222 00:23:51.155274    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1222 00:23:51.169588    4360 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1222 00:23:51.182400    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1222 00:23:51.195886    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I1222 00:23:51.209373    4360 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I1222 00:23:51.224904    4360 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1222 00:23:51.236978    4360 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1222 00:23:51.250088    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:23:51.345755    4360 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1222 00:23:51.451764    4360 start.go:495] detecting cgroup driver to use...
I1222 00:23:51.451797    4360 detect.go:190] detected "systemd" cgroup driver on host os
I1222 00:23:51.451855    4360 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1222 00:23:51.474256    4360 cruntime.go:279] skipping containerd shutdown because we are bound to it
I1222 00:23:51.474334    4360 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1222 00:23:51.489990    4360 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1222 00:23:51.513924    4360 ssh_runner.go:195] Run: which cri-dockerd
I1222 00:23:51.519019    4360 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1222 00:23:51.531020    4360 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I1222 00:23:51.553716    4360 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1222 00:23:51.656062    4360 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1222 00:23:51.751954    4360 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I1222 00:23:51.752082    4360 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I1222 00:23:51.777586    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:23:51.877799    4360 ssh_runner.go:195] Run: sudo systemctl restart docker
I1222 00:23:52.851438    4360 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I1222 00:23:52.868781    4360 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1222 00:23:52.884071    4360 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1222 00:23:53.001089    4360 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1222 00:23:53.108391    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:23:53.205171    4360 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1222 00:23:53.228533    4360 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1222 00:23:53.243323    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:23:53.337392    4360 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I1222 00:23:53.423898    4360 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1222 00:23:53.424033    4360 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1222 00:23:53.428718    4360 start.go:563] Will wait 60s for crictl version
I1222 00:23:53.428793    4360 ssh_runner.go:195] Run: which crictl
I1222 00:23:53.433208    4360 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1222 00:23:53.472441    4360 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.2.0
RuntimeApiVersion:  v1
I1222 00:23:53.472507    4360 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1222 00:23:53.497947    4360 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1222 00:23:53.529258    4360 out.go:235] 🐳  Preparing Kubernetes v1.31.0 on Docker 27.2.0 ...
I1222 00:23:53.529419    4360 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1222 00:23:53.552730    4360 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I1222 00:23:53.557159    4360 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1222 00:23:53.573589    4360 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:2900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/kiran-madala:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I1222 00:23:53.573691    4360 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1222 00:23:53.573755    4360 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1222 00:23:53.596156    4360 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1222 00:23:53.596168    4360 docker.go:615] Images already preloaded, skipping extraction
I1222 00:23:53.596237    4360 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1222 00:23:53.617915    4360 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1222 00:23:53.617928    4360 cache_images.go:84] Images are preloaded, skipping loading
I1222 00:23:53.617935    4360 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.31.0 docker true true} ...
I1222 00:23:53.618053    4360 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.31.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I1222 00:23:53.618105    4360 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1222 00:23:53.673732    4360 cni.go:84] Creating CNI manager for ""
I1222 00:23:53.673753    4360 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1222 00:23:53.673769    4360 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I1222 00:23:53.673788    4360 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.31.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1222 00:23:53.673945    4360 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.31.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1222 00:23:53.674008    4360 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.31.0
I1222 00:23:53.685396    4360 binaries.go:44] Found k8s binaries, skipping transfer
I1222 00:23:53.685463    4360 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1222 00:23:53.696441    4360 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I1222 00:23:53.719901    4360 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1222 00:23:53.747128    4360 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2149 bytes)
I1222 00:23:53.771392    4360 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I1222 00:23:53.776552    4360 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1222 00:23:53.790468    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:23:53.887136    4360 ssh_runner.go:195] Run: sudo systemctl start kubelet
I1222 00:23:53.919713    4360 certs.go:68] Setting up /home/kiran-madala/.minikube/profiles/minikube for IP: 192.168.49.2
I1222 00:23:53.919724    4360 certs.go:194] generating shared ca certs ...
I1222 00:23:53.919771    4360 certs.go:226] acquiring lock for ca certs: {Name:mk2c2ffb8a4a207ceb77c0921f3b5f53df862c6e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:53.919969    4360 certs.go:240] generating "minikubeCA" ca cert: /home/kiran-madala/.minikube/ca.key
I1222 00:23:54.399974    4360 crypto.go:156] Writing cert to /home/kiran-madala/.minikube/ca.crt ...
I1222 00:23:54.399990    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/ca.crt: {Name:mk8b149f879504391404f6d7c378b7358aaa8b98 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:54.400227    4360 crypto.go:164] Writing key to /home/kiran-madala/.minikube/ca.key ...
I1222 00:23:54.400239    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/ca.key: {Name:mk75125458589d36ad652b95406aa358209f710f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:54.400393    4360 certs.go:240] generating "proxyClientCA" ca cert: /home/kiran-madala/.minikube/proxy-client-ca.key
I1222 00:23:54.909634    4360 crypto.go:156] Writing cert to /home/kiran-madala/.minikube/proxy-client-ca.crt ...
I1222 00:23:54.909660    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/proxy-client-ca.crt: {Name:mk7deea435b3fefaba85e82f412a5a4b50276de7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:54.909942    4360 crypto.go:164] Writing key to /home/kiran-madala/.minikube/proxy-client-ca.key ...
I1222 00:23:54.909957    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/proxy-client-ca.key: {Name:mk1cbc1543179d78efc1017853ea648fd2edc322 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:54.910109    4360 certs.go:256] generating profile certs ...
I1222 00:23:54.910203    4360 certs.go:363] generating signed profile cert for "minikube-user": /home/kiran-madala/.minikube/profiles/minikube/client.key
I1222 00:23:54.910224    4360 crypto.go:68] Generating cert /home/kiran-madala/.minikube/profiles/minikube/client.crt with IP's: []
I1222 00:23:55.091191    4360 crypto.go:156] Writing cert to /home/kiran-madala/.minikube/profiles/minikube/client.crt ...
I1222 00:23:55.091213    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/client.crt: {Name:mk48e1381c882fcc60c81fae6179703d4ead477c Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:55.091565    4360 crypto.go:164] Writing key to /home/kiran-madala/.minikube/profiles/minikube/client.key ...
I1222 00:23:55.091580    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/client.key: {Name:mk8b85d80bb98079e2d336a46a537df2141d5119 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:55.091802    4360 certs.go:363] generating signed profile cert for "minikube": /home/kiran-madala/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I1222 00:23:55.091841    4360 crypto.go:68] Generating cert /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I1222 00:23:55.742269    4360 crypto.go:156] Writing cert to /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I1222 00:23:55.742307    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mkd92910bc9248f6b1348e2d28d97915503df4a5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:55.742569    4360 crypto.go:164] Writing key to /home/kiran-madala/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I1222 00:23:55.742581    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mk4c3696ba66826f644d27bfa580835c93b9140a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:55.742734    4360 certs.go:381] copying /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt
I1222 00:23:55.742862    4360 certs.go:385] copying /home/kiran-madala/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/kiran-madala/.minikube/profiles/minikube/apiserver.key
I1222 00:23:55.742956    4360 certs.go:363] generating signed profile cert for "aggregator": /home/kiran-madala/.minikube/profiles/minikube/proxy-client.key
I1222 00:23:55.742982    4360 crypto.go:68] Generating cert /home/kiran-madala/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I1222 00:23:56.104646    4360 crypto.go:156] Writing cert to /home/kiran-madala/.minikube/profiles/minikube/proxy-client.crt ...
I1222 00:23:56.104663    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/proxy-client.crt: {Name:mk56ca57f8cc79cf58485ec6009713ea5a222643 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:56.104874    4360 crypto.go:164] Writing key to /home/kiran-madala/.minikube/profiles/minikube/proxy-client.key ...
I1222 00:23:56.104881    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.minikube/profiles/minikube/proxy-client.key: {Name:mk7413240f3a33dc84325761e415bbda1c374341 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:23:56.105132    4360 certs.go:484] found cert: /home/kiran-madala/.minikube/certs/ca-key.pem (1679 bytes)
I1222 00:23:56.105174    4360 certs.go:484] found cert: /home/kiran-madala/.minikube/certs/ca.pem (1094 bytes)
I1222 00:23:56.105204    4360 certs.go:484] found cert: /home/kiran-madala/.minikube/certs/cert.pem (1135 bytes)
I1222 00:23:56.105263    4360 certs.go:484] found cert: /home/kiran-madala/.minikube/certs/key.pem (1675 bytes)
I1222 00:23:56.106690    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1222 00:23:56.140672    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I1222 00:23:56.172039    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1222 00:23:56.206455    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I1222 00:23:56.238644    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I1222 00:23:56.271656    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I1222 00:23:56.305491    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1222 00:23:56.340588    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I1222 00:23:56.376255    4360 ssh_runner.go:362] scp /home/kiran-madala/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1222 00:23:56.418115    4360 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1222 00:23:56.444569    4360 ssh_runner.go:195] Run: openssl version
I1222 00:23:56.450931    4360 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1222 00:23:56.464569    4360 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1222 00:23:56.469045    4360 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Dec 21 18:53 /usr/share/ca-certificates/minikubeCA.pem
I1222 00:23:56.469118    4360 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1222 00:23:56.477025    4360 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1222 00:23:56.493445    4360 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I1222 00:23:56.500977    4360 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I1222 00:23:56.501087    4360 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:2900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/kiran-madala:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1222 00:23:56.501255    4360 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1222 00:23:56.534404    4360 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1222 00:23:56.552545    4360 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1222 00:23:56.569965    4360 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I1222 00:23:56.570031    4360 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1222 00:23:56.594629    4360 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1222 00:23:56.594645    4360 kubeadm.go:157] found existing configuration files:

I1222 00:23:56.594713    4360 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1222 00:23:56.618630    4360 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I1222 00:23:56.618696    4360 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1222 00:23:56.637284    4360 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1222 00:23:56.657718    4360 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I1222 00:23:56.657827    4360 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1222 00:23:56.675051    4360 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1222 00:23:56.693280    4360 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I1222 00:23:56.693355    4360 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1222 00:23:56.713170    4360 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1222 00:23:56.732544    4360 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I1222 00:23:56.732598    4360 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1222 00:23:56.753417    4360 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1222 00:23:56.835697    4360 kubeadm.go:310] W1221 18:53:56.834847    1749 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1222 00:23:56.839093    4360 kubeadm.go:310] W1221 18:53:56.838292    1749 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1222 00:23:56.917233    4360 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I1222 00:23:56.950515    4360 kubeadm.go:310] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/6.8.0-51-generic\n", err: exit status 1
I1222 00:23:57.109532    4360 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1222 00:24:11.080475    4360 kubeadm.go:310] [init] Using Kubernetes version: v1.31.0
I1222 00:24:11.080612    4360 kubeadm.go:310] [preflight] Running pre-flight checks
I1222 00:24:11.080926    4360 kubeadm.go:310] [preflight] The system verification failed. Printing the output from the verification:
I1222 00:24:11.081118    4360 kubeadm.go:310] [0;37mKERNEL_VERSION[0m: [0;32m6.8.0-51-generic[0m
I1222 00:24:11.081220    4360 kubeadm.go:310] [0;37mOS[0m: [0;32mLinux[0m
I1222 00:24:11.081380    4360 kubeadm.go:310] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I1222 00:24:11.081575    4360 kubeadm.go:310] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I1222 00:24:11.081697    4360 kubeadm.go:310] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I1222 00:24:11.081850    4360 kubeadm.go:310] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I1222 00:24:11.082040    4360 kubeadm.go:310] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I1222 00:24:11.082203    4360 kubeadm.go:310] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I1222 00:24:11.082391    4360 kubeadm.go:310] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I1222 00:24:11.082500    4360 kubeadm.go:310] [0;37mCGROUPS_IO[0m: [0;32menabled[0m
I1222 00:24:11.082752    4360 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I1222 00:24:11.082968    4360 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1222 00:24:11.083233    4360 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I1222 00:24:11.083428    4360 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1222 00:24:11.084665    4360 out.go:235]     ▪ Generating certificates and keys ...
I1222 00:24:11.084919    4360 kubeadm.go:310] [certs] Using existing ca certificate authority
I1222 00:24:11.085053    4360 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I1222 00:24:11.085397    4360 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I1222 00:24:11.085575    4360 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I1222 00:24:11.085714    4360 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I1222 00:24:11.085790    4360 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I1222 00:24:11.085855    4360 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I1222 00:24:11.086004    4360 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I1222 00:24:11.086204    4360 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I1222 00:24:11.086368    4360 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I1222 00:24:11.086462    4360 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I1222 00:24:11.086614    4360 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I1222 00:24:11.086679    4360 kubeadm.go:310] [certs] Generating "sa" key and public key
I1222 00:24:11.086827    4360 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I1222 00:24:11.087030    4360 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I1222 00:24:11.087257    4360 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I1222 00:24:11.087495    4360 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I1222 00:24:11.087727    4360 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I1222 00:24:11.087810    4360 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I1222 00:24:11.087926    4360 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I1222 00:24:11.088005    4360 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I1222 00:24:11.090901    4360 out.go:235]     ▪ Booting up control plane ...
I1222 00:24:11.091499    4360 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I1222 00:24:11.091595    4360 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I1222 00:24:11.091680    4360 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I1222 00:24:11.091847    4360 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I1222 00:24:11.091952    4360 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I1222 00:24:11.092007    4360 kubeadm.go:310] [kubelet-start] Starting the kubelet
I1222 00:24:11.092214    4360 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I1222 00:24:11.092408    4360 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I1222 00:24:11.092482    4360 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 1.001783237s
I1222 00:24:11.092567    4360 kubeadm.go:310] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I1222 00:24:11.092662    4360 kubeadm.go:310] [api-check] The API server is healthy after 5.502726454s
I1222 00:24:11.092854    4360 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I1222 00:24:11.093287    4360 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I1222 00:24:11.093443    4360 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I1222 00:24:11.093754    4360 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I1222 00:24:11.094033    4360 kubeadm.go:310] [bootstrap-token] Using token: r5tx1x.649odi18h96t9exm
I1222 00:24:11.096817    4360 out.go:235]     ▪ Configuring RBAC rules ...
I1222 00:24:11.096978    4360 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I1222 00:24:11.097196    4360 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I1222 00:24:11.097557    4360 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I1222 00:24:11.097732    4360 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I1222 00:24:11.097900    4360 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I1222 00:24:11.098003    4360 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I1222 00:24:11.098124    4360 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I1222 00:24:11.098186    4360 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I1222 00:24:11.098234    4360 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I1222 00:24:11.098239    4360 kubeadm.go:310] 
I1222 00:24:11.098329    4360 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I1222 00:24:11.098338    4360 kubeadm.go:310] 
I1222 00:24:11.098420    4360 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I1222 00:24:11.098424    4360 kubeadm.go:310] 
I1222 00:24:11.098450    4360 kubeadm.go:310]   mkdir -p $HOME/.kube
I1222 00:24:11.098555    4360 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I1222 00:24:11.098634    4360 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I1222 00:24:11.098639    4360 kubeadm.go:310] 
I1222 00:24:11.098716    4360 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I1222 00:24:11.098721    4360 kubeadm.go:310] 
I1222 00:24:11.098791    4360 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I1222 00:24:11.098795    4360 kubeadm.go:310] 
I1222 00:24:11.098883    4360 kubeadm.go:310] You should now deploy a pod network to the cluster.
I1222 00:24:11.099099    4360 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I1222 00:24:11.099223    4360 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I1222 00:24:11.099231    4360 kubeadm.go:310] 
I1222 00:24:11.099442    4360 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I1222 00:24:11.099607    4360 kubeadm.go:310] and service account keys on each node and then running the following as root:
I1222 00:24:11.099620    4360 kubeadm.go:310] 
I1222 00:24:11.099785    4360 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token r5tx1x.649odi18h96t9exm \
I1222 00:24:11.099969    4360 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:1a5e7a593d761bc675bafe124dbf5711b33b3e54c68185407f99eb82a85d8feb \
I1222 00:24:11.100008    4360 kubeadm.go:310] 	--control-plane 
I1222 00:24:11.100015    4360 kubeadm.go:310] 
I1222 00:24:11.100169    4360 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I1222 00:24:11.100184    4360 kubeadm.go:310] 
I1222 00:24:11.100332    4360 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token r5tx1x.649odi18h96t9exm \
I1222 00:24:11.100472    4360 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:1a5e7a593d761bc675bafe124dbf5711b33b3e54c68185407f99eb82a85d8feb 
I1222 00:24:11.100490    4360 cni.go:84] Creating CNI manager for ""
I1222 00:24:11.100517    4360 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1222 00:24:11.101859    4360 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I1222 00:24:11.103352    4360 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I1222 00:24:11.116902    4360 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I1222 00:24:11.142428    4360 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I1222 00:24:11.142551    4360 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.31.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I1222 00:24:11.142567    4360 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.31.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2024_12_22T00_24_11_0700 minikube.k8s.io/version=v1.34.0 minikube.k8s.io/commit=210b148df93a80eb872ecbeb7e35281b3c582c61 minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I1222 00:24:11.234653    4360 ops.go:34] apiserver oom_adj: -16
I1222 00:24:11.234686    4360 kubeadm.go:1113] duration metric: took 92.199427ms to wait for elevateKubeSystemPrivileges
I1222 00:24:11.252669    4360 kubeadm.go:394] duration metric: took 14.751583687s to StartCluster
I1222 00:24:11.252698    4360 settings.go:142] acquiring lock: {Name:mkdd70b3a2cda0038f0f4b34d8702bd4ae52fc21 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:24:11.252822    4360 settings.go:150] Updating kubeconfig:  /home/kiran-madala/.kube/config
I1222 00:24:11.253387    4360 lock.go:35] WriteFile acquiring /home/kiran-madala/.kube/config: {Name:mkcbc505b76108f68b6d31224a14a348a29e18d5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1222 00:24:11.253617    4360 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.31.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I1222 00:24:11.253672    4360 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I1222 00:24:11.253753    4360 addons.go:507] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I1222 00:24:11.253928    4360 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I1222 00:24:11.253945    4360 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I1222 00:24:11.253956    4360 addons.go:69] Setting default-storageclass=true in profile "minikube"
I1222 00:24:11.253976    4360 addons.go:234] Setting addon storage-provisioner=true in "minikube"
I1222 00:24:11.254009    4360 host.go:66] Checking if "minikube" exists ...
I1222 00:24:11.254024    4360 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I1222 00:24:11.254447    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:24:11.254742    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:24:11.255528    4360 out.go:177] 🔎  Verifying Kubernetes components...
I1222 00:24:11.257681    4360 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1222 00:24:11.292191    4360 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I1222 00:24:11.295656    4360 addons.go:431] installing /etc/kubernetes/addons/storage-provisioner.yaml
I1222 00:24:11.295790    4360 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I1222 00:24:11.295897    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:24:11.316001    4360 addons.go:234] Setting addon default-storageclass=true in "minikube"
I1222 00:24:11.316049    4360 host.go:66] Checking if "minikube" exists ...
I1222 00:24:11.316760    4360 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1222 00:24:11.339043    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:24:11.379471    4360 addons.go:431] installing /etc/kubernetes/addons/storageclass.yaml
I1222 00:24:11.379484    4360 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I1222 00:24:11.379546    4360 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1222 00:24:11.408215    4360 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32768 SSHKeyPath:/home/kiran-madala/.minikube/machines/minikube/id_rsa Username:docker}
I1222 00:24:11.481362    4360 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.31.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.31.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I1222 00:24:11.527357    4360 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I1222 00:24:11.538988    4360 ssh_runner.go:195] Run: sudo systemctl start kubelet
I1222 00:24:11.623460    4360 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I1222 00:24:11.897525    4360 start.go:971] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I1222 00:24:12.080183    4360 api_server.go:52] waiting for apiserver process to appear ...
I1222 00:24:12.080237    4360 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1222 00:24:12.086900    4360 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I1222 00:24:12.090853    4360 addons.go:510] duration metric: took 837.088463ms for enable addons: enabled=[storage-provisioner default-storageclass]
I1222 00:24:12.098736    4360 api_server.go:72] duration metric: took 845.027488ms to wait for apiserver process to appear ...
I1222 00:24:12.098753    4360 api_server.go:88] waiting for apiserver healthz status ...
I1222 00:24:12.098774    4360 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I1222 00:24:12.104439    4360 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I1222 00:24:12.105365    4360 api_server.go:141] control plane version: v1.31.0
I1222 00:24:12.105379    4360 api_server.go:131] duration metric: took 6.62067ms to wait for apiserver health ...
I1222 00:24:12.105386    4360 system_pods.go:43] waiting for kube-system pods to appear ...
I1222 00:24:12.112214    4360 system_pods.go:59] 5 kube-system pods found
I1222 00:24:12.112233    4360 system_pods.go:61] "etcd-minikube" [e5df8ef9-2269-4c9b-9d22-08e830b64bec] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I1222 00:24:12.112241    4360 system_pods.go:61] "kube-apiserver-minikube" [0b27a399-31d1-40bd-9a51-4f9a3484ef2a] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I1222 00:24:12.112249    4360 system_pods.go:61] "kube-controller-manager-minikube" [6c8c3efa-7ee7-4ee5-ac5b-0458209d6409] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I1222 00:24:12.112260    4360 system_pods.go:61] "kube-scheduler-minikube" [e377feba-7590-4407-9bc7-99ac48c12acc] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I1222 00:24:12.112265    4360 system_pods.go:61] "storage-provisioner" [ddc47f71-19d0-475d-aafa-9fa8209e3136] Pending
I1222 00:24:12.112270    4360 system_pods.go:74] duration metric: took 6.879056ms to wait for pod list to return data ...
I1222 00:24:12.112278    4360 kubeadm.go:582] duration metric: took 858.578231ms to wait for: map[apiserver:true system_pods:true]
I1222 00:24:12.112289    4360 node_conditions.go:102] verifying NodePressure condition ...
I1222 00:24:12.115997    4360 node_conditions.go:122] node storage ephemeral capacity is 490048472Ki
I1222 00:24:12.116020    4360 node_conditions.go:123] node cpu capacity is 4
I1222 00:24:12.116040    4360 node_conditions.go:105] duration metric: took 3.746777ms to run NodePressure ...
I1222 00:24:12.116050    4360 start.go:241] waiting for startup goroutines ...
I1222 00:24:12.404153    4360 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I1222 00:24:12.404216    4360 start.go:246] waiting for cluster config update ...
I1222 00:24:12.404254    4360 start.go:255] writing updated cluster config ...
I1222 00:24:12.405004    4360 ssh_runner.go:195] Run: rm -f paused
I1222 00:24:12.468356    4360 start.go:600] kubectl: 1.31.0, cluster: 1.31.0 (minor skew: 0)
I1222 00:24:12.471104    4360 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Dec 21 18:53:50 minikube dockerd[638]: time="2024-12-21T18:53:50.007883891Z" level=info msg="Daemon has completed initialization"
Dec 21 18:53:50 minikube dockerd[638]: time="2024-12-21T18:53:50.042886848Z" level=info msg="API listen on [::]:2376"
Dec 21 18:53:50 minikube dockerd[638]: time="2024-12-21T18:53:50.042889033Z" level=info msg="API listen on /var/run/docker.sock"
Dec 21 18:53:50 minikube systemd[1]: Started Docker Application Container Engine.
Dec 21 18:53:51 minikube systemd[1]: Stopping Docker Application Container Engine...
Dec 21 18:53:51 minikube dockerd[638]: time="2024-12-21T18:53:51.360172491Z" level=info msg="Processing signal 'terminated'"
Dec 21 18:53:51 minikube dockerd[638]: time="2024-12-21T18:53:51.361774233Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Dec 21 18:53:51 minikube dockerd[638]: time="2024-12-21T18:53:51.362457791Z" level=info msg="Daemon shutdown complete"
Dec 21 18:53:51 minikube systemd[1]: docker.service: Deactivated successfully.
Dec 21 18:53:51 minikube systemd[1]: Stopped Docker Application Container Engine.
Dec 21 18:53:51 minikube systemd[1]: Starting Docker Application Container Engine...
Dec 21 18:53:51 minikube dockerd[935]: time="2024-12-21T18:53:51.498919279Z" level=info msg="Starting up"
Dec 21 18:53:51 minikube dockerd[935]: time="2024-12-21T18:53:51.525056155Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Dec 21 18:53:51 minikube dockerd[935]: time="2024-12-21T18:53:51.530982321Z" level=info msg="Loading containers: start."
Dec 21 18:53:51 minikube dockerd[935]: time="2024-12-21T18:53:51.891180124Z" level=info msg="Processing signal 'terminated'"
Dec 21 18:53:51 minikube dockerd[935]: time="2024-12-21T18:53:51.986357992Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.084773126Z" level=info msg="Loading containers: done."
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.096729200Z" level=info msg="Docker daemon" commit=3ab5c7d containerd-snapshotter=false storage-driver=overlay2 version=27.2.0
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.096808435Z" level=info msg="Daemon has completed initialization"
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.130985733Z" level=info msg="API listen on /var/run/docker.sock"
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.131006379Z" level=info msg="API listen on [::]:2376"
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.132142849Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Dec 21 18:53:52 minikube dockerd[935]: time="2024-12-21T18:53:52.132544747Z" level=info msg="Daemon shutdown complete"
Dec 21 18:53:52 minikube systemd[1]: docker.service: Deactivated successfully.
Dec 21 18:53:52 minikube systemd[1]: Stopped Docker Application Container Engine.
Dec 21 18:53:52 minikube systemd[1]: Starting Docker Application Container Engine...
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.183298666Z" level=info msg="Starting up"
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.201965506Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.214403934Z" level=info msg="Loading containers: start."
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.689675350Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.795797086Z" level=info msg="Loading containers: done."
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.809223507Z" level=info msg="Docker daemon" commit=3ab5c7d containerd-snapshotter=false storage-driver=overlay2 version=27.2.0
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.809284009Z" level=info msg="Daemon has completed initialization"
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.848962010Z" level=info msg="API listen on /var/run/docker.sock"
Dec 21 18:53:52 minikube dockerd[1191]: time="2024-12-21T18:53:52.848970226Z" level=info msg="API listen on [::]:2376"
Dec 21 18:53:52 minikube systemd[1]: Started Docker Application Container Engine.
Dec 21 18:53:53 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Start docker client with request timeout 0s"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Hairpin mode is set to hairpin-veth"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Loaded network plugin cni"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Docker cri networking managed by network plugin cni"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Setting cgroupDriver systemd"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Dec 21 18:53:53 minikube cri-dockerd[1452]: time="2024-12-21T18:53:53Z" level=info msg="Start cri-dockerd grpc backend"
Dec 21 18:53:53 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Dec 21 18:54:04 minikube cri-dockerd[1452]: time="2024-12-21T18:54:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ee7b4f36bf44eda37ca24b80d2a9f820b1782eee5a79489b1bb1e43c1ff0aaff/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Dec 21 18:54:04 minikube cri-dockerd[1452]: time="2024-12-21T18:54:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7de96c966b780ae3053c46c1cdc051d33c8b0fbfa9c90276e7e0f9ed0840bb66/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Dec 21 18:54:04 minikube cri-dockerd[1452]: time="2024-12-21T18:54:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/6a8f0b260111916bc09b4f6bc9df54e73a6ba8c24d8cae0392bd1263008c6da9/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Dec 21 18:54:04 minikube cri-dockerd[1452]: time="2024-12-21T18:54:04Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/4e514ca9f763a5926c1b45d7a52bb45a25b9523987485a1721e817ca36b3e0ca/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Dec 21 18:54:15 minikube cri-dockerd[1452]: time="2024-12-21T18:54:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/461bfe9b8ff80991078bb2e2ae400fc55463dc9424b04c1a8c413042a3cf2bc9/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Dec 21 18:54:16 minikube cri-dockerd[1452]: time="2024-12-21T18:54:16Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/178df39e8bfb9a7be13419099a2db5d2ae49e819e5f82aaf7380d9082ed45aef/resolv.conf as [nameserver 192.168.49.1 options trust-ad ndots:0 edns0]"
Dec 21 18:54:16 minikube cri-dockerd[1452]: time="2024-12-21T18:54:16Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/932ac2b9972e07c1d18c384816706c6e8c902817852b6d51dd7e838efcb1d554/resolv.conf as [nameserver 192.168.49.1 options trust-ad ndots:0 edns0]"
Dec 21 18:54:20 minikube cri-dockerd[1452]: time="2024-12-21T18:54:20Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Dec 21 18:54:46 minikube dockerd[1191]: time="2024-12-21T18:54:46.002856334Z" level=info msg="ignoring event" container=4c00ff73874d98b962b6233295104bdcde6e8a140f01cfc5120b56ecf478a3ed module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Dec 21 19:05:02 minikube cri-dockerd[1452]: time="2024-12-21T19:05:02Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ca040e60531d35fecfb553cead67609a9d261a56099c25389f7dc0893505a31d/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Dec 21 19:05:15 minikube cri-dockerd[1452]: time="2024-12-21T19:05:15Z" level=info msg="Pulling image nginx:latest: 650ee30bbe5e: Extracting [===============================================>   ]  41.75MB/43.84MB"
Dec 21 19:05:15 minikube cri-dockerd[1452]: time="2024-12-21T19:05:15Z" level=info msg="Stop pulling image nginx:latest: Status: Downloaded newer image for nginx:latest"


==> container status <==
CONTAINER           IMAGE                                                                           CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
9b5e120fc4a91       nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be   15 minutes ago      Running             nginx-pod                 0                   ca040e60531d3       nginx-pod
f38dd85ddb24a       6e38f40d628db                                                                   25 minutes ago      Running             storage-provisioner       1                   461bfe9b8ff80       storage-provisioner
96db0636d39cd       cbb01a7bd410d                                                                   26 minutes ago      Running             coredns                   0                   932ac2b9972e0       coredns-6f6b679f8f-w7675
f49d46055cf26       ad83b2ca7b09e                                                                   26 minutes ago      Running             kube-proxy                0                   178df39e8bfb9       kube-proxy-cdm4n
4c00ff73874d9       6e38f40d628db                                                                   26 minutes ago      Exited              storage-provisioner       0                   461bfe9b8ff80       storage-provisioner
358e5136f46b1       2e96e5913fc06                                                                   26 minutes ago      Running             etcd                      0                   4e514ca9f763a       etcd-minikube
9b7b12610510d       604f5db92eaa8                                                                   26 minutes ago      Running             kube-apiserver            0                   ee7b4f36bf44e       kube-apiserver-minikube
0e0e0e819d471       045733566833c                                                                   26 minutes ago      Running             kube-controller-manager   0                   6a8f0b2601119       kube-controller-manager-minikube
407ca5f2efc24       1766f54c897f0                                                                   26 minutes ago      Running             kube-scheduler            0                   7de96c966b780       kube-scheduler-minikube


==> coredns [96db0636d39c] <==
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.11.1
linux/amd64, go1.20.7, ae2bbc2
[INFO] 127.0.0.1:50255 - 6848 "HINFO IN 4956141485485597201.3187396043146454694. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.004533405s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[603099980]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (21-Dec-2024 18:54:16.446) (total time: 30001ms):
Trace[603099980]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30001ms (18:54:46.447)
Trace[603099980]: [30.0016539s] [30.0016539s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1219718646]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (21-Dec-2024 18:54:16.446) (total time: 30001ms):
Trace[1219718646]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30001ms (18:54:46.447)
Trace[1219718646]: [30.001754161s] [30.001754161s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1012944986]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (21-Dec-2024 18:54:16.446) (total time: 30002ms):
Trace[1012944986]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30001ms (18:54:46.447)
Trace[1012944986]: [30.002068272s] [30.002068272s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=210b148df93a80eb872ecbeb7e35281b3c582c61
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_12_22T00_24_11_0700
                    minikube.k8s.io/version=v1.34.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sat, 21 Dec 2024 18:54:07 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sat, 21 Dec 2024 19:20:34 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sat, 21 Dec 2024 19:15:54 +0000   Sat, 21 Dec 2024 18:54:07 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sat, 21 Dec 2024 19:15:54 +0000   Sat, 21 Dec 2024 18:54:07 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sat, 21 Dec 2024 19:15:54 +0000   Sat, 21 Dec 2024 18:54:07 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sat, 21 Dec 2024 19:15:54 +0000   Sat, 21 Dec 2024 18:54:08 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                4
  ephemeral-storage:  490048472Ki
  hugepages-2Mi:      0
  memory:             12109528Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  490048472Ki
  hugepages-2Mi:      0
  memory:             12109528Ki
  pods:               110
System Info:
  Machine ID:                 041b83d87dc04e03a1065624f6505fad
  System UUID:                e0ef3b77-9a99-46d3-b3dc-1c1034675437
  Boot ID:                    99de6326-21e6-4936-9f97-a74ddd2b1aaf
  Kernel Version:             6.8.0-51-generic
  OS Image:                   Ubuntu 22.04.4 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://27.2.0
  Kubelet Version:            v1.31.0
  Kube-Proxy Version:         
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  default                     nginx-pod                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         15m
  kube-system                 coredns-6f6b679f8f-w7675            100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     26m
  kube-system                 etcd-minikube                       100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         26m
  kube-system                 kube-apiserver-minikube             250m (6%)     0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-controller-manager-minikube    200m (5%)     0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-proxy-cdm4n                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-scheduler-minikube             100m (2%)     0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 storage-provisioner                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (18%)  0 (0%)
  memory             170Mi (1%)  170Mi (1%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 26m   kube-proxy       
  Normal  Starting                 26m   kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  26m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  26m   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    26m   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     26m   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           26m   node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Dec21 18:47] MDS CPU bug present and SMT on, data leak possible. See https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html for more details.
[  +0.116384] pci 0000:01:00.0: [Firmware Bug]: disabling VPD access (can't determine size of non-standard VPD format)
[  +1.333417] pci 0000:00:1a.0: EHCI: BIOS handoff failed (BIOS bug?) 01010001
[  +1.200000] pci 0000:00:1d.0: EHCI: BIOS handoff failed (BIOS bug?) 01010001
[  +0.059170] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA measurements will not be recorded in the IMA log.
[  +0.000183] platform eisa.0: EISA: Cannot allocate resource for mainboard
[  +0.000004] platform eisa.0: Cannot allocate resource for EISA slot 1
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 2
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 3
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 4
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 5
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 6
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 7
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 8
[  +0.073745] ENERGY_PERF_BIAS: Set to 'normal', was 'performance'
[  +0.043667] blacklist: Duplicate blacklisted hash bin:0000000000000000000000000000000000000000000000000000000000000000
[  +2.933688] systemd[1]: Configuration file /run/systemd/system/netplan-ovs-cleanup.service is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.
[  +0.344861] systemd-journald[296]: File /var/log/journal/4964329864c94682bf870b1eb800ffb9/system.journal corrupted or uncleanly shut down, renaming and replacing.
[  +0.602196] ACPI Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with OpRegion 0x0000000000000400-0x000000000000047F (\PMIO) (20230628/utaddress-204)
[  +0.000021] ACPI Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20230628/utaddress-204)
[  +0.000008] ACPI Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20230628/utaddress-204)
[  +0.000008] ACPI Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20230628/utaddress-204)
[  +0.000007] lpc_ich: Resource conflict(s) found affecting gpio_ich
[  +0.221819] iwlwifi 0000:02:00.0: can't disable ASPM; OS doesn't have ASPM control
[  +0.086682] Bluetooth: hci0: unexpected event for opcode 0x0000
[  +0.676325] at24 0-0050: supply vcc not found, using dummy regulator
[  +5.355241] kauditd_printk_skb: 175 callbacks suppressed
[Dec21 18:48] systemd-journald[296]: File /var/log/journal/4964329864c94682bf870b1eb800ffb9/user-1000.journal corrupted or uncleanly shut down, renaming and replacing.
[Dec21 18:53] kauditd_printk_skb: 42 callbacks suppressed
[ +10.188413] kauditd_printk_skb: 21 callbacks suppressed
[ +20.605565] kauditd_printk_skb: 2 callbacks suppressed
[Dec21 18:54] kauditd_printk_skb: 2 callbacks suppressed
[Dec21 18:58] warning: `ThreadPoolForeg' uses wireless extensions which will stop working for Wi-Fi 7 hardware; use nl80211
[Dec21 19:01] usb 1-1.4: device not accepting address 4, error -71
[Dec21 19:04] usb 1-1.4: device descriptor read/64, error -71
[  +0.590967] usb 1-1.4: device not accepting address 4, error -71
[  +0.142181] usb 1-1.4: device descriptor read/64, error -71
[  +0.813869] usb 1-1.4: device descriptor read/64, error -71
[  +3.345515] usb 1-1.4: Failed to suspend device, error -71
[ +16.218239] usb 1-1-port4: Cannot enable. Maybe the USB cable is bad?
[Dec21 19:06] usb 1-1-port4: Cannot enable. Maybe the USB cable is bad?
[  +1.071961] usb 1-1-port4: Cannot enable. Maybe the USB cable is bad?
[  +0.479758] usb 1-1.4: device not accepting address 7, error -22
[  +0.888019] usb 1-1.4: device not accepting address 7, error -22
[  +0.256916] usb 1-1.4: device descriptor read/64, error -71
[  +0.603077] usb 1-1.4: device descriptor read/64, error -71
[  +1.566955] usb 1-1.4: device descriptor read/64, error -71
[  +0.394676] usb 1-1.4: device descriptor read/64, error -71
[Dec21 19:08] kauditd_printk_skb: 6 callbacks suppressed


==> etcd [358e5136f46b] <==
{"level":"warn","ts":"2024-12-21T18:54:05.505747Z","caller":"embed/config.go:687","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-12-21T18:54:05.505768Z","caller":"embed/etcd.go:128","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-12-21T18:54:05.505832Z","caller":"embed/etcd.go:496","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-12-21T18:54:05.511593Z","caller":"embed/etcd.go:136","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-12-21T18:54:05.512184Z","caller":"embed/etcd.go:310","msg":"starting an etcd server","etcd-version":"3.5.15","git-sha":"9a5533382","go-version":"go1.21.12","go-os":"linux","go-arch":"amd64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-12-21T18:54:05.516020Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"3.127156ms"}
{"level":"info","ts":"2024-12-21T18:54:05.578062Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2024-12-21T18:54:05.582460Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-12-21T18:54:05.582792Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2024-12-21T18:54:05.582814Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-12-21T18:54:05.582829Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2024-12-21T18:54:05.582889Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2024-12-21T18:54:05.589547Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-12-21T18:54:05.593563Z","caller":"mvcc/kvstore.go:418","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-12-21T18:54:05.596691Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-12-21T18:54:05.609823Z","caller":"etcdserver/server.go:867","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.15","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-12-21T18:54:05.611063Z","caller":"etcdserver/server.go:751","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-12-21T18:54:05.612977Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-12-21T18:54:05.615277Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-12-21T18:54:05.615956Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-12-21T18:54:05.615808Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-12-21T18:54:05.617165Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-12-21T18:54:05.626541Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2024-12-21T18:54:05.684458Z","caller":"embed/etcd.go:599","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-12-21T18:54:05.684503Z","caller":"embed/etcd.go:571","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-12-21T18:54:05.684399Z","caller":"embed/etcd.go:728","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-12-21T18:54:05.691079Z","caller":"embed/etcd.go:279","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-12-21T18:54:05.691369Z","caller":"embed/etcd.go:870","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-12-21T18:54:06.384087Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-12-21T18:54:06.384126Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-12-21T18:54:06.384166Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-12-21T18:54:06.384238Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-12-21T18:54:06.384257Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-12-21T18:54:06.384372Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-12-21T18:54:06.384392Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-12-21T18:54:06.385129Z","caller":"etcdserver/server.go:2629","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-12-21T18:54:06.385904Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-12-21T18:54:06.385908Z","caller":"etcdserver/server.go:2118","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-12-21T18:54:06.385936Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-12-21T18:54:06.386442Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-12-21T18:54:06.386510Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-12-21T18:54:06.386728Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-12-21T18:54:06.386823Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-12-21T18:54:06.386851Z","caller":"etcdserver/server.go:2653","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-12-21T18:54:06.387336Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2024-12-21T18:54:06.387790Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2024-12-21T18:54:06.388749Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-12-21T18:54:06.392088Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-12-21T19:04:06.434119Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":599}
{"level":"info","ts":"2024-12-21T19:04:06.439858Z","caller":"mvcc/kvstore_compaction.go:69","msg":"finished scheduled compaction","compact-revision":599,"took":"5.500525ms","hash":2743756413,"current-db-size-bytes":1355776,"current-db-size":"1.4 MB","current-db-size-in-use-bytes":1355776,"current-db-size-in-use":"1.4 MB"}
{"level":"info","ts":"2024-12-21T19:04:06.439931Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2743756413,"revision":599,"compact-revision":-1}
{"level":"info","ts":"2024-12-21T19:09:06.441897Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":839}
{"level":"info","ts":"2024-12-21T19:09:06.444855Z","caller":"mvcc/kvstore_compaction.go:69","msg":"finished scheduled compaction","compact-revision":839,"took":"2.705765ms","hash":2510746822,"current-db-size-bytes":1355776,"current-db-size":"1.4 MB","current-db-size-in-use-bytes":937984,"current-db-size-in-use":"938 kB"}
{"level":"info","ts":"2024-12-21T19:09:06.444921Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2510746822,"revision":839,"compact-revision":599}
{"level":"info","ts":"2024-12-21T19:14:06.448056Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1089}
{"level":"info","ts":"2024-12-21T19:14:06.450185Z","caller":"mvcc/kvstore_compaction.go:69","msg":"finished scheduled compaction","compact-revision":1089,"took":"1.881563ms","hash":650538245,"current-db-size-bytes":1355776,"current-db-size":"1.4 MB","current-db-size-in-use-bytes":954368,"current-db-size-in-use":"954 kB"}
{"level":"info","ts":"2024-12-21T19:14:06.450218Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":650538245,"revision":1089,"compact-revision":839}
{"level":"info","ts":"2024-12-21T19:19:06.455921Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1333}
{"level":"info","ts":"2024-12-21T19:19:06.459292Z","caller":"mvcc/kvstore_compaction.go:69","msg":"finished scheduled compaction","compact-revision":1333,"took":"2.886778ms","hash":1101321113,"current-db-size-bytes":1355776,"current-db-size":"1.4 MB","current-db-size-in-use-bytes":950272,"current-db-size-in-use":"950 kB"}
{"level":"info","ts":"2024-12-21T19:19:06.459331Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1101321113,"revision":1333,"compact-revision":1089}


==> kernel <==
 19:20:35 up 32 min,  0 users,  load average: 0.64, 1.22, 1.08
Linux minikube 6.8.0-51-generic #52-Ubuntu SMP PREEMPT_DYNAMIC Thu Dec  5 13:09:44 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.4 LTS"


==> kube-apiserver [9b7b12610510] <==
I1221 18:54:07.809778       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I1221 18:54:07.809930       1 controller.go:119] Starting legacy_token_tracking_controller
I1221 18:54:07.809938       1 controller.go:142] Starting OpenAPI controller
I1221 18:54:07.809944       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I1221 18:54:07.809957       1 apiservice_controller.go:100] Starting APIServiceRegistrationController
I1221 18:54:07.809967       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1221 18:54:07.809975       1 controller.go:90] Starting OpenAPI V3 controller
I1221 18:54:07.810004       1 naming_controller.go:294] Starting NamingConditionController
I1221 18:54:07.810014       1 controller.go:78] Starting OpenAPI AggregationController
I1221 18:54:07.810034       1 establishing_controller.go:81] Starting EstablishingController
I1221 18:54:07.810053       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I1221 18:54:07.810062       1 system_namespaces_controller.go:66] Starting system namespaces controller
I1221 18:54:07.810083       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I1221 18:54:07.810109       1 crd_finalizer.go:269] Starting CRDFinalizer
I1221 18:54:07.810594       1 local_available_controller.go:156] Starting LocalAvailability controller
I1221 18:54:07.810606       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I1221 18:54:07.810649       1 aggregator.go:169] waiting for initial CRD sync...
I1221 18:54:07.810743       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I1221 18:54:07.810752       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I1221 18:54:07.815126       1 apf_controller.go:377] Starting API Priority and Fairness config controller
I1221 18:54:07.815195       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1221 18:54:07.817646       1 cluster_authentication_trust_controller.go:443] Starting cluster_authentication_trust_controller controller
I1221 18:54:07.818338       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I1221 18:54:07.831112       1 dynamic_cafile_content.go:160] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I1221 18:54:07.831237       1 dynamic_cafile_content.go:160] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I1221 18:54:07.897235       1 shared_informer.go:320] Caches are synced for node_authorizer
I1221 18:54:07.904019       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I1221 18:54:07.904048       1 policy_source.go:224] refreshing policies
I1221 18:54:07.914630       1 shared_informer.go:320] Caches are synced for configmaps
I1221 18:54:07.914723       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1221 18:54:07.914759       1 cache.go:39] Caches are synced for LocalAvailability controller
I1221 18:54:07.914822       1 handler_discovery.go:450] Starting ResourceDiscoveryManager
I1221 18:54:07.914705       1 shared_informer.go:320] Caches are synced for crd-autoregister
I1221 18:54:07.915224       1 aggregator.go:171] initial CRD sync complete...
I1221 18:54:07.915342       1 autoregister_controller.go:144] Starting autoregister controller
I1221 18:54:07.915481       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1221 18:54:07.916410       1 cache.go:39] Caches are synced for autoregister controller
I1221 18:54:07.915422       1 apf_controller.go:382] Running API Priority and Fairness config worker
I1221 18:54:07.917033       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I1221 18:54:07.918244       1 cache.go:39] Caches are synced for RemoteAvailability controller
I1221 18:54:07.918926       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I1221 18:54:07.924375       1 controller.go:615] quota admission added evaluator for: namespaces
I1221 18:54:07.977936       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I1221 18:54:08.822197       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I1221 18:54:08.829953       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I1221 18:54:08.829978       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I1221 18:54:09.391847       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1221 18:54:09.439007       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1221 18:54:09.531053       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W1221 18:54:09.541790       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I1221 18:54:09.544621       1 controller.go:615] quota admission added evaluator for: endpoints
I1221 18:54:09.552234       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I1221 18:54:09.844013       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I1221 18:54:10.476711       1 controller.go:615] quota admission added evaluator for: deployments.apps
I1221 18:54:10.486108       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I1221 18:54:10.501438       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I1221 18:54:15.504887       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I1221 18:54:15.550563       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I1221 19:10:06.149831       1 alloc.go:330] "allocated clusterIPs" service="default/nginx-service" clusterIPs={"IPv4":"10.99.95.193"}
E1221 19:15:56.804749       1 conn.go:339] Error on socket receive: read tcp 192.168.49.2:8443->192.168.49.1:56328: use of closed network connection


==> kube-controller-manager [0e0e0e819d47] <==
I1221 18:54:14.550771       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kube-apiserver-client
I1221 18:54:14.552258       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-legacy-unknown
I1221 18:54:14.556750       1 shared_informer.go:320] Caches are synced for TTL
I1221 18:54:14.558449       1 shared_informer.go:320] Caches are synced for node
I1221 18:54:14.558557       1 range_allocator.go:171] "Sending events to api server" logger="node-ipam-controller"
I1221 18:54:14.558709       1 range_allocator.go:177] "Starting range CIDR allocator" logger="node-ipam-controller"
I1221 18:54:14.558730       1 shared_informer.go:313] Waiting for caches to sync for cidrallocator
I1221 18:54:14.558742       1 shared_informer.go:320] Caches are synced for cidrallocator
I1221 18:54:14.565688       1 range_allocator.go:422] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I1221 18:54:14.565731       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 18:54:14.565774       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 18:54:14.589128       1 shared_informer.go:320] Caches are synced for cronjob
I1221 18:54:14.593702       1 shared_informer.go:320] Caches are synced for validatingadmissionpolicy-status
I1221 18:54:14.594896       1 shared_informer.go:320] Caches are synced for certificate-csrapproving
I1221 18:54:14.596082       1 shared_informer.go:320] Caches are synced for TTL after finished
I1221 18:54:14.596110       1 shared_informer.go:320] Caches are synced for expand
I1221 18:54:14.596128       1 shared_informer.go:320] Caches are synced for bootstrap_signer
I1221 18:54:14.596157       1 shared_informer.go:320] Caches are synced for crt configmap
I1221 18:54:14.740863       1 shared_informer.go:320] Caches are synced for daemon sets
I1221 18:54:14.743098       1 shared_informer.go:320] Caches are synced for GC
I1221 18:54:14.743639       1 shared_informer.go:320] Caches are synced for endpoint
I1221 18:54:14.745902       1 shared_informer.go:320] Caches are synced for taint
I1221 18:54:14.746065       1 node_lifecycle_controller.go:1232] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I1221 18:54:14.746479       1 node_lifecycle_controller.go:884] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I1221 18:54:14.746779       1 shared_informer.go:320] Caches are synced for endpoint_slice_mirroring
I1221 18:54:14.746881       1 node_lifecycle_controller.go:1078] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I1221 18:54:14.747186       1 shared_informer.go:320] Caches are synced for persistent volume
I1221 18:54:14.747734       1 shared_informer.go:320] Caches are synced for legacy-service-account-token-cleaner
I1221 18:54:14.747926       1 shared_informer.go:320] Caches are synced for job
I1221 18:54:14.748038       1 shared_informer.go:320] Caches are synced for stateful set
I1221 18:54:14.750726       1 shared_informer.go:320] Caches are synced for disruption
I1221 18:54:14.763383       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 18:54:14.764103       1 shared_informer.go:320] Caches are synced for resource quota
I1221 18:54:14.767534       1 shared_informer.go:320] Caches are synced for attach detach
I1221 18:54:14.777393       1 shared_informer.go:320] Caches are synced for taint-eviction-controller
I1221 18:54:14.793609       1 shared_informer.go:320] Caches are synced for deployment
I1221 18:54:14.794624       1 shared_informer.go:320] Caches are synced for HPA
I1221 18:54:14.797091       1 shared_informer.go:320] Caches are synced for ReplicationController
I1221 18:54:14.797116       1 shared_informer.go:320] Caches are synced for ReplicaSet
I1221 18:54:14.797210       1 shared_informer.go:320] Caches are synced for ephemeral
I1221 18:54:14.798109       1 shared_informer.go:320] Caches are synced for endpoint_slice
I1221 18:54:14.800742       1 shared_informer.go:320] Caches are synced for PVC protection
I1221 18:54:14.808669       1 shared_informer.go:320] Caches are synced for resource quota
I1221 18:54:14.958474       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 18:54:15.247059       1 shared_informer.go:320] Caches are synced for garbage collector
I1221 18:54:15.300249       1 shared_informer.go:320] Caches are synced for garbage collector
I1221 18:54:15.300292       1 garbagecollector.go:157] "All resource monitors have synced. Proceeding to collect garbage" logger="garbage-collector-controller"
I1221 18:54:15.724444       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="169.448647ms"
I1221 18:54:15.736194       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="11.682807ms"
I1221 18:54:15.736966       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="698.928µs"
I1221 18:54:15.744906       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="2.588895ms"
I1221 18:54:16.482025       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="83.653µs"
I1221 18:54:20.570233       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 18:54:48.213849       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="15.397795ms"
I1221 18:54:48.213980       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-6f6b679f8f" duration="77.201µs"
I1221 18:59:25.777546       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 19:04:31.581322       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 19:05:43.328955       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 19:10:47.758036       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"
I1221 19:15:54.399555       1 range_allocator.go:241] "Successfully synced" logger="node-ipam-controller" key="minikube"


==> kube-proxy [f49d46055cf2] <==
I1221 18:54:16.184801       1 server_linux.go:66] "Using iptables proxy"
I1221 18:54:16.254499       1 server.go:677] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E1221 18:54:16.254571       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I1221 18:54:16.278240       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I1221 18:54:16.278300       1 server_linux.go:169] "Using iptables Proxier"
I1221 18:54:16.281274       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I1221 18:54:16.281786       1 server.go:483] "Version info" version="v1.31.0"
I1221 18:54:16.281829       1 server.go:485] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1221 18:54:16.284108       1 config.go:197] "Starting service config controller"
I1221 18:54:16.286042       1 shared_informer.go:313] Waiting for caches to sync for service config
I1221 18:54:16.285528       1 config.go:326] "Starting node config controller"
I1221 18:54:16.286420       1 shared_informer.go:313] Waiting for caches to sync for node config
I1221 18:54:16.284902       1 config.go:104] "Starting endpoint slice config controller"
I1221 18:54:16.286445       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I1221 18:54:16.386866       1 shared_informer.go:320] Caches are synced for endpoint slice config
I1221 18:54:16.386885       1 shared_informer.go:320] Caches are synced for node config
I1221 18:54:16.386947       1 shared_informer.go:320] Caches are synced for service config


==> kube-scheduler [407ca5f2efc2] <==
W1221 18:54:07.866902       1 authentication.go:372] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I1221 18:54:07.914579       1 server.go:167] "Starting Kubernetes Scheduler" version="v1.31.0"
I1221 18:54:07.914985       1 server.go:169] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1221 18:54:07.923237       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1221 18:54:07.923391       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1221 18:54:07.924759       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I1221 18:54:07.924941       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
W1221 18:54:07.927126       1 reflector.go:561] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E1221 18:54:07.927194       1 reflector.go:158] "Unhandled Error" err="runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W1221 18:54:07.936035       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1221 18:54:07.936399       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.936870       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:07.937126       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.937461       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E1221 18:54:07.939629       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.937765       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1221 18:54:07.940228       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.938327       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E1221 18:54:07.940744       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.938711       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E1221 18:54:07.941212       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.938812       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:07.941715       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.938932       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E1221 18:54:07.942194       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.939012       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W1221 18:54:07.939099       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1221 18:54:07.943047       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
E1221 18:54:07.942889       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.939349       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E1221 18:54:07.944478       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.939453       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:07.944953       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:07.939552       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W1221 18:54:07.945456       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:07.945713       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
E1221 18:54:07.945676       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:08.795841       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:08.795920       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:08.854604       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E1221 18:54:08.854665       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:08.912730       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E1221 18:54:08.912789       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W1221 18:54:08.991100       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:08.991157       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.004530       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:09.004603       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.043927       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E1221 18:54:09.044103       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.075262       1 reflector.go:561] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E1221 18:54:09.075335       1 reflector.go:158] "Unhandled Error" err="runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W1221 18:54:09.119997       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E1221 18:54:09.120048       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.149861       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1221 18:54:09.149915       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.193618       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1221 18:54:09.193671       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W1221 18:54:09.209013       1 reflector.go:561] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E1221 18:54:09.209056       1 reflector.go:158] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
I1221 18:54:10.924398       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.398393    2282 state_mem.go:36] "Initialized new in-memory state store"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.398595    2282 state_mem.go:88] "Updated default CPUSet" cpuSet=""
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.398609    2282 state_mem.go:96] "Updated CPUSet assignments" assignments={}
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.398630    2282 policy_none.go:49] "None policy: Start"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.402484    2282 memory_manager.go:170] "Starting memorymanager" policy="None"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.402526    2282 state_mem.go:35] "Initializing new in-memory state store"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.402848    2282 state_mem.go:75] "Updated machine memory state"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.409854    2282 manager.go:510] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.410072    2282 eviction_manager.go:189] "Eviction manager: starting control loop"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.410093    2282 container_log_manager.go:189] "Initializing container log rotate workers" workers=1 monitorPeriod="10s"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.410532    2282 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
Dec 21 18:54:10 minikube kubelet[2282]: E1221 18:54:10.463029    2282 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.511851    2282 kubelet_node_status.go:72] "Attempting to register node" node="minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.519851    2282 kubelet_node_status.go:111] "Node was previously registered" node="minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.519968    2282 kubelet_node_status.go:75] "Successfully registered node" node="minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531203    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531279    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531351    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/a5363f4f31e043bdae3c93aca4991903-etcd-certs\") pod \"etcd-minikube\" (UID: \"a5363f4f31e043bdae3c93aca4991903\") " pod="kube-system/etcd-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531396    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/9e315b3a91fa9f6f7463439d9dac1a56-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"9e315b3a91fa9f6f7463439d9dac1a56\") " pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531434    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531479    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/9e315b3a91fa9f6f7463439d9dac1a56-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"9e315b3a91fa9f6f7463439d9dac1a56\") " pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531507    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531540    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531569    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/e039200acb850c82bb901653cc38ff6e-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"e039200acb850c82bb901653cc38ff6e\") " pod="kube-system/kube-scheduler-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531616    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/9e315b3a91fa9f6f7463439d9dac1a56-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"9e315b3a91fa9f6f7463439d9dac1a56\") " pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531650    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531687    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/40f5f661ab65f2e4bfe41ac2993c01de-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"40f5f661ab65f2e4bfe41ac2993c01de\") " pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531735    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/a5363f4f31e043bdae3c93aca4991903-etcd-data\") pod \"etcd-minikube\" (UID: \"a5363f4f31e043bdae3c93aca4991903\") " pod="kube-system/etcd-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531772    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/9e315b3a91fa9f6f7463439d9dac1a56-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"9e315b3a91fa9f6f7463439d9dac1a56\") " pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:10 minikube kubelet[2282]: I1221 18:54:10.531802    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/9e315b3a91fa9f6f7463439d9dac1a56-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"9e315b3a91fa9f6f7463439d9dac1a56\") " pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.308381    2282 apiserver.go:52] "Watching apiserver"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.420427    2282 desired_state_of_world_populator.go:154] "Finished populating initial desired state of world"
Dec 21 18:54:11 minikube kubelet[2282]: E1221 18:54:11.440579    2282 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Dec 21 18:54:11 minikube kubelet[2282]: E1221 18:54:11.441832    2282 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Dec 21 18:54:11 minikube kubelet[2282]: E1221 18:54:11.446842    2282 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Dec 21 18:54:11 minikube kubelet[2282]: E1221 18:54:11.447827    2282 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.481460    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=2.481221545 podStartE2EDuration="2.481221545s" podCreationTimestamp="2024-12-21 18:54:09 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:11.477380345 +0000 UTC m=+1.235294898" watchObservedRunningTime="2024-12-21 18:54:11.481221545 +0000 UTC m=+1.239136083"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.504416    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=1.504397708 podStartE2EDuration="1.504397708s" podCreationTimestamp="2024-12-21 18:54:10 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:11.503904416 +0000 UTC m=+1.261818978" watchObservedRunningTime="2024-12-21 18:54:11.504397708 +0000 UTC m=+1.262312237"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.551804    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=1.551781294 podStartE2EDuration="1.551781294s" podCreationTimestamp="2024-12-21 18:54:10 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:11.523119337 +0000 UTC m=+1.281033883" watchObservedRunningTime="2024-12-21 18:54:11.551781294 +0000 UTC m=+1.309695825"
Dec 21 18:54:11 minikube kubelet[2282]: I1221 18:54:11.584394    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.584266266 podStartE2EDuration="1.584266266s" podCreationTimestamp="2024-12-21 18:54:10 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:11.556591061 +0000 UTC m=+1.314505628" watchObservedRunningTime="2024-12-21 18:54:11.584266266 +0000 UTC m=+1.342180797"
Dec 21 18:54:14 minikube kubelet[2282]: I1221 18:54:14.862235    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-btskd\" (UniqueName: \"kubernetes.io/projected/ddc47f71-19d0-475d-aafa-9fa8209e3136-kube-api-access-btskd\") pod \"storage-provisioner\" (UID: \"ddc47f71-19d0-475d-aafa-9fa8209e3136\") " pod="kube-system/storage-provisioner"
Dec 21 18:54:14 minikube kubelet[2282]: I1221 18:54:14.862490    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/ddc47f71-19d0-475d-aafa-9fa8209e3136-tmp\") pod \"storage-provisioner\" (UID: \"ddc47f71-19d0-475d-aafa-9fa8209e3136\") " pod="kube-system/storage-provisioner"
Dec 21 18:54:14 minikube kubelet[2282]: E1221 18:54:14.973665    2282 projected.go:288] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Dec 21 18:54:14 minikube kubelet[2282]: E1221 18:54:14.973722    2282 projected.go:194] Error preparing data for projected volume kube-api-access-btskd for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
Dec 21 18:54:14 minikube kubelet[2282]: E1221 18:54:14.973852    2282 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/ddc47f71-19d0-475d-aafa-9fa8209e3136-kube-api-access-btskd podName:ddc47f71-19d0-475d-aafa-9fa8209e3136 nodeName:}" failed. No retries permitted until 2024-12-21 18:54:15.473806158 +0000 UTC m=+5.231720718 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-btskd" (UniqueName: "kubernetes.io/projected/ddc47f71-19d0-475d-aafa-9fa8209e3136-kube-api-access-btskd") pod "storage-provisioner" (UID: "ddc47f71-19d0-475d-aafa-9fa8209e3136") : configmap "kube-root-ca.crt" not found
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.567503    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/ea22bd90-7615-49f8-900d-090ffb33f022-xtables-lock\") pod \"kube-proxy-cdm4n\" (UID: \"ea22bd90-7615-49f8-900d-090ffb33f022\") " pod="kube-system/kube-proxy-cdm4n"
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.567575    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/ea22bd90-7615-49f8-900d-090ffb33f022-kube-proxy\") pod \"kube-proxy-cdm4n\" (UID: \"ea22bd90-7615-49f8-900d-090ffb33f022\") " pod="kube-system/kube-proxy-cdm4n"
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.567639    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-knpx7\" (UniqueName: \"kubernetes.io/projected/ea22bd90-7615-49f8-900d-090ffb33f022-kube-api-access-knpx7\") pod \"kube-proxy-cdm4n\" (UID: \"ea22bd90-7615-49f8-900d-090ffb33f022\") " pod="kube-system/kube-proxy-cdm4n"
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.567678    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/ea22bd90-7615-49f8-900d-090ffb33f022-lib-modules\") pod \"kube-proxy-cdm4n\" (UID: \"ea22bd90-7615-49f8-900d-090ffb33f022\") " pod="kube-system/kube-proxy-cdm4n"
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.770384    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/71e22a5e-af05-4baf-80ac-e3a881f696ec-config-volume\") pod \"coredns-6f6b679f8f-w7675\" (UID: \"71e22a5e-af05-4baf-80ac-e3a881f696ec\") " pod="kube-system/coredns-6f6b679f8f-w7675"
Dec 21 18:54:15 minikube kubelet[2282]: I1221 18:54:15.770596    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-trq68\" (UniqueName: \"kubernetes.io/projected/71e22a5e-af05-4baf-80ac-e3a881f696ec-kube-api-access-trq68\") pod \"coredns-6f6b679f8f-w7675\" (UID: \"71e22a5e-af05-4baf-80ac-e3a881f696ec\") " pod="kube-system/coredns-6f6b679f8f-w7675"
Dec 21 18:54:16 minikube kubelet[2282]: I1221 18:54:16.484668    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-6f6b679f8f-w7675" podStartSLOduration=1.484643863 podStartE2EDuration="1.484643863s" podCreationTimestamp="2024-12-21 18:54:15 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:16.483334057 +0000 UTC m=+6.241248608" watchObservedRunningTime="2024-12-21 18:54:16.484643863 +0000 UTC m=+6.242558410"
Dec 21 18:54:16 minikube kubelet[2282]: I1221 18:54:16.497529    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-cdm4n" podStartSLOduration=1.497505967 podStartE2EDuration="1.497505967s" podCreationTimestamp="2024-12-21 18:54:15 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:16.497212228 +0000 UTC m=+6.255126773" watchObservedRunningTime="2024-12-21 18:54:16.497505967 +0000 UTC m=+6.255420510"
Dec 21 18:54:17 minikube kubelet[2282]: I1221 18:54:17.148653    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=5.148624702 podStartE2EDuration="5.148624702s" podCreationTimestamp="2024-12-21 18:54:12 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2024-12-21 18:54:16.509651264 +0000 UTC m=+6.267565810" watchObservedRunningTime="2024-12-21 18:54:17.148624702 +0000 UTC m=+6.906539240"
Dec 21 18:54:18 minikube kubelet[2282]: I1221 18:54:18.174163    2282 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
Dec 21 18:54:20 minikube kubelet[2282]: I1221 18:54:20.549750    2282 kuberuntime_manager.go:1633] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Dec 21 18:54:20 minikube kubelet[2282]: I1221 18:54:20.551404    2282 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Dec 21 18:54:46 minikube kubelet[2282]: I1221 18:54:46.821047    2282 scope.go:117] "RemoveContainer" containerID="4c00ff73874d98b962b6233295104bdcde6e8a140f01cfc5120b56ecf478a3ed"
Dec 21 19:05:02 minikube kubelet[2282]: I1221 19:05:02.019622    2282 reconciler_common.go:245] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-dbtxl\" (UniqueName: \"kubernetes.io/projected/f9d0d964-ee02-4ece-80cb-73cebac5de3f-kube-api-access-dbtxl\") pod \"nginx-pod\" (UID: \"f9d0d964-ee02-4ece-80cb-73cebac5de3f\") " pod="default/nginx-pod"
Dec 21 19:05:16 minikube kubelet[2282]: I1221 19:05:16.430471    2282 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="default/nginx-pod" podStartSLOduration=2.348165071 podStartE2EDuration="15.430452159s" podCreationTimestamp="2024-12-21 19:05:01 +0000 UTC" firstStartedPulling="2024-12-21 19:05:02.548462035 +0000 UTC m=+652.306376580" lastFinishedPulling="2024-12-21 19:05:15.630749103 +0000 UTC m=+665.388663668" observedRunningTime="2024-12-21 19:05:16.429987239 +0000 UTC m=+666.187901791" watchObservedRunningTime="2024-12-21 19:05:16.430452159 +0000 UTC m=+666.188366685"


==> storage-provisioner [4c00ff73874d] <==
I1221 18:54:15.977716       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F1221 18:54:45.981264       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout


==> storage-provisioner [f38dd85ddb24] <==
I1221 18:54:46.953585       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I1221 18:54:46.962681       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I1221 18:54:46.962727       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I1221 18:54:46.973373       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I1221 18:54:46.973570       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_d7d54a92-90d6-4915-b6af-fb33ccae4fc7!
I1221 18:54:46.973901       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"4d278c5a-bc0d-4909-9d24-6a05eaa7b0a0", APIVersion:"v1", ResourceVersion:"385", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_d7d54a92-90d6-4915-b6af-fb33ccae4fc7 became leader
I1221 18:54:47.074472       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_d7d54a92-90d6-4915-b6af-fb33ccae4fc7!

